// Mocks generated by Mockito 5.4.4 from annotations
// in nubilab/test/domain/usecases/get_air_quality_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:nubilab/data/models/air_quality.dart' as _i2;
import 'package:nubilab/domain/repositories/air_quality_repository.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAirQualityResponse_0 extends _i1.SmartFake
    implements _i2.AirQualityResponse {
  _FakeAirQualityResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AirQualityRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAirQualityRepository extends _i1.Mock
    implements _i3.AirQualityRepository {
  MockAirQualityRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.AirQualityResponse> getAirQualityBySido({
    required String? sidoName,
    int? pageNo = 1,
    int? numOfRows = 100,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAirQualityBySido,
          [],
          {
            #sidoName: sidoName,
            #pageNo: pageNo,
            #numOfRows: numOfRows,
          },
        ),
        returnValue:
            _i4.Future<_i2.AirQualityResponse>.value(_FakeAirQualityResponse_0(
          this,
          Invocation.method(
            #getAirQualityBySido,
            [],
            {
              #sidoName: sidoName,
              #pageNo: pageNo,
              #numOfRows: numOfRows,
            },
          ),
        )),
      ) as _i4.Future<_i2.AirQualityResponse>);
}
